From ed575bb11c960808cf95fa20bdd44eeec5eebc92 Mon Sep 17 00:00:00 2001
From: Roman Meshkevich <roman.meshkevich@cogentembedded.com>
Date: Wed, 14 Sep 2016 21:24:55 +0300
Subject: [PATCH 3/5] v4l2-renderer: set length and bytesused of each plane in
 v4l2_buffer

Specifying zero for the bytesused in v4l2_buffer is deprecated and it is
neccessary that length is grater than or equal byteused in the linux
kernel 4.1 or later.
---
 src/v4l2-renderer-device.h |  2 ++
 src/v4l2-renderer.c        | 33 +++++++++++++++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/src/v4l2-renderer-device.h b/src/v4l2-renderer-device.h
index b615142..646c001 100644
--- a/src/v4l2-renderer-device.h
+++ b/src/v4l2-renderer-device.h
@@ -45,6 +45,8 @@ struct v4l2_renderer_output {
 struct v4l2_renderer_plane {
 	int dmafd;
 	unsigned int stride;
+	unsigned int length;
+	unsigned int bytesused;
 };
 
 #ifdef V4L2_GL_FALLBACK
diff --git a/src/v4l2-renderer.c b/src/v4l2-renderer.c
index db79b40..69aab92 100644
--- a/src/v4l2-renderer.c
+++ b/src/v4l2-renderer.c
@@ -981,6 +981,8 @@ v4l2_renderer_attach_shm(struct v4l2_surface_state *vs, struct weston_buffer *bu
 	vs->num_planes = 1;
 	vs->planes[0].stride = stride;
 	vs->planes[0].dmafd = -1;
+	vs->planes[0].length = vs->planes[0].bytesused
+		= stride * buffer->height;
 	vs->bpp = bpp;
 
 	if (device_interface->attach_buffer(vs) == -1)
@@ -1034,6 +1036,33 @@ kms_buffer_state_handle_buffer_destroy(struct wl_listener *listener, void *data)
 	vs->kms_buffer_destroy_listener.notify = NULL;
 }
 
+static inline unsigned int
+v4l2_renderer_plane_height(int plane, int height, unsigned int format)
+{
+	switch (plane) {
+	case 0:
+		return height;
+	case 1:
+		switch (format) {
+		case V4L2_PIX_FMT_NV12M:
+		case V4L2_PIX_FMT_NV21M:
+		case V4L2_PIX_FMT_YUV420M:
+			return height / 2;
+		case V4L2_PIX_FMT_NV16M:
+		case V4L2_PIX_FMT_NV61M:
+			return height;
+		}
+		break;
+	case 2:
+		switch (format) {
+		case V4L2_PIX_FMT_YUV420M:
+			return height / 2;
+		}
+		break;
+	}
+	return 0;
+}
+
 static int
 v4l2_renderer_attach_dmabuf(struct v4l2_surface_state *vs, struct weston_buffer *buffer)
 {
@@ -1139,6 +1168,10 @@ v4l2_renderer_attach_dmabuf(struct v4l2_surface_state *vs, struct weston_buffer
 	for (i = 0; i < kbuf->num_planes; i++) {
 		vs->planes[i].stride = kbuf->planes[i].stride;
 		vs->planes[i].dmafd = kbuf->planes[i].fd;
+		vs->planes[i].length = vs->planes[i].bytesused
+			= vs->planes[i].stride *
+				v4l2_renderer_plane_height(i, vs->height,
+							   vs->pixel_format);
 	}
 
 	if (device_interface->attach_buffer(vs) == -1)
-- 
2.7.4

